'''Написать программу сложения и умножения двух шестнадцатеричных чисел.
При этом каждое число представляется как массив, элементы которого — цифры числа.'''
from collections import deque

HexNum = {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9,
          'A': 10, 'B': 11, 'C': 12, 'D': 13, 'E': 14, 'F': 15,
          0: '0', 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 7: '7', 8: '8', 9: '9',
          10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F'}
# словарь содержит по ключу - 10ричное, и обратно - для трансформации
def sum_hex(x, y):
    '''Сумма шестнадцатеричных чисел'''

    result = deque()
    transfer = 0 #будет +1 к значению слева при сложении столбиком, при значениях >16

    if len(x) > len(y):
        x, y = deque(x), deque(y)
    else:
        x, y = deque(y), deque(x)

    while x: #пока не уберем все значения из более длинного числа
        if y:
            spam = HexNum[x.pop()] + HexNum[y.pop()] + transfer
            # складываем зачения по ключу, забирая ключи с конца числа
            #A = 10, F = 15, A + B = 25
        else:
            spam = HexNum[x.pop()] + transfer

        transfer = 0

        if spam < 16:
            result.appendleft(HexNum[spam]) #кладем значение влево, ключ - 10ричное
        else:
            result.appendleft(HexNum[spam - 16])
            transfer = 1 # случай образования +1 к левому

    if transfer:
        result.appendleft('1') #если самое длинное закончилось, а +1 слева остался

    return list(result)

print(sum_hex('A2', 'C4F'))

# С умножением совсем запутался